<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tutorialworks</groupId>
	<artifactId>camel-sports-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>camel-sports-api</name>

	<description>Camel REST API with JSON support</description>

	<properties>
		<java.version>11</java.version>
		<camel.version>3.9.0</camel.version>
		<spring.boot-version>2.4.4</spring.boot-version>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<jib.version>2.7.1</jib.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Spring Boot BOM -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Camel BOM -->
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-spring-boot-dependencies</artifactId>
				<version>${camel.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-servlet-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-jackson-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
            <!-- Use Google Jib to build a Docker image -->
            <!-- This builds an image without needing a Dockerfile, or Docker installed! -->
            <!-- Huzzah! -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.version}</version>
                <configuration>
                    <container>
                        <!-- Define the port manually here, because Google Jib isn't a mind-reader you know -->
                        <ports>
                            <port>8080</port>
                        </ports>
                    </container>

                    <!-- If you need a shell in the container, use the 'debug' base image -->
                    <!-- If you change this setting and rebuild, you'll need to `docker pull` again if you want the latest image locally -->
                    <!--<from>
                        <image>gcr.io/distroless/java:debug</image>
                    </from>-->

                    <!-- If you want Jib to push to a registry then configure it here -->
                    <!--<to>
                        <image>quay.io/tdonohue/hello-java</image>
                        <auth>
                            <username>${env.REGISTRY_USERNAME}</username>
                            <password>${env.REGISTRY_PASSWORD}</password>
                        </auth>
                    </to>-->
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
